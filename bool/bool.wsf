# Copyright (c) 2021 Thalia Archibald
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# Boolean operators

# and returns the logical AND of x and y.
# (x y -- x&&y)
and:
    jz .and_zero
    jmp cast
.and_zero:
    drop jmp .zero

# or returns the logical OR of x and y.
# (x y -- x||y)
or:
    jz cast
    jmp .one

# xor returns the logical XOR of x and y.
# (x y -- x^y)
xor:
    jz cast
    jmp not

# andnot returns the logical AND NOT of x and y.
# (x y -- x&&!y)
andnot:
    jz cast
    jmp .zero

# nand returns the logical NAND of x and y.
# (x y -- !(x&&y))
nand:
    jz .nand_one
    jmp not
.nand_one:
    drop jmp .one

# nor returns the logical NOR of x and y.
# (x y -- ^(x||y))
nor:
    jz not
    jmp .zero

# xnor returns the logical XNOR of x and y.
# (x y -- !(x^y))
xnor:
    jz not
    jmp cast

# nandnot returns the logical NAND NOT of x and y.
# (x y -- !(x&&!y))
nandnot:
    jz not
    jmp .one

# not returns the logical NOT of x.
# (x -- !x)
not:
    jz .one
.zero:
    0 ret

# cast coerces x to a boolean.
# (x -- !!x)
cast:
    jz .zero
.one:
    1 ret

# Predicates

# is_eq returns whether x equals y.
# (x y -- x==y)
is_eq:
    - jmp not

# is_ne returns whether x is not equal to y.
# (x y -- x!=y)
is_ne:
    - jmp cast

# is_lt returns whether x is less than y.
# (x y -- x<y)
is_lt:
    - jmp is_neg

# is_gt returns whether x is greater than y.
# (x y -- x>y)
is_gt:
    - jmp is_pos

# is_le returns whether x is less than or equal to y.
# (x y -- x<=y)
is_le:
    1+ - jmp is_neg

# is_ge returns whether x is greater than or equal to y.
# (x y -- x>=y)
is_ge:
    1- - jmp is_pos

# is_pos returns whether x is positive (not including zero).
# (x -- x>0)
is_pos:
    1- jmp is_non_neg

# is_neg returns whether x is negative.
# (x -- x<0)
is_neg:
    jn .one
    jmp .zero

# is_non_pos returns whether x is zero or negative.
# (x -- x<=0)
is_non_pos:
    1- jmp is_neg

# is_non_neg returns whether x is zero or positive.
# (x -- x>=0)
is_non_neg:
    jn .zero
    jmp .one
