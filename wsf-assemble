#!/bin/bash -e
# Copyright (c) 2021-2022 Andrew Archibald
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

[ $# -ne 2 ] && echo "usage: ${0##*/} <file> <out_file>" >&2 && exit 2
prog="$1"
out="$2"

WSLIB="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

SED=sed
which gsed > /dev/null && SED=gsed

imports=()
in_imports() {
  local import
  for import in "${imports[@]}"; do
    [ "$import" = "$1" ] && return 0
  done
  return 1
}

resolve_import() {
  local file="$1"
  local import="$2"
  if [ -e "$import.wsf" ]; then
    if [ -d "$import.wsf" ]; then
      echo "$file: Unable to resolve import: $import.wsf is a directory"
      return 1
    fi
    if [ -e "$import/module.wsf" ]; then
      echo "$file: Unable to resolve import: both $import.wsf and $import/module.wsf exit"
      return 1
    fi
    echo "$import.wsf"
    return 0
  elif [ -e "$import/module.wsf" ]; then
    if [ -d "$import/module.wsf" ]; then
      echo "$file: Unable to resolve import: $import/module.wsf is a directory"
      return 1
    fi
    echo "$import/module.wsf"
    return 0
  else
    echo "$file: Unable to resolve import: $import"
    return 1
  fi
}

get_imports() {
  local file="$1"
  local module="$2"
  file="$(realpath -s "$file")"
  imports=("${imports[@]}" "$module:$file")

  local module_file="${file%/*}/module.wsf"
  if [ "$module" = '' ] && ! in_imports ":$module_file" && [ -f "$module_file" ]; then
    get_imports "$module_file" ''
  fi

  local import
  while read -r import; do
    local import_module
    case "$import" in
      import:*)
        import="${import#import:}"
        import_module="${import#@}"
        import_module="${import_module##*/}"
      ;;
      export:*)
        import="${import#export:}"
        import_module="$module"
      ;;
    esac

    local import_path
    if [[ "$import" = @* ]]; then
      import="${import#@}"
      import_path="$WSLIB/$import"
    else
      import_path="$(dirname "$file")/$import"
    fi
    local import_file
    if ! import_file="$(resolve_import "$file" "$import_path")"; then
      echo "$import_file" >&2
      exit 1
    fi

    if ! in_imports "$import_module:$import_file"; then
      get_imports "$import_file" "$import_module"
    fi
  done < <($SED -En '
    s/^\s*"([^"]+)"\s+import( |$)/import:\1/p
    s/^\s*"([^"]+)"\s+export( |$)/export:\1/p
  ' "$file")
}

get_imports "$prog" ''

if [ "${prog#*/}" != module.wsf ]; then
  $SED -Ef "$WSLIB"/wsf.sed "$prog" > "$out"
  final_inst=$(awk '/./{line=$0} END{print line}' "$out")
  if ! grep -Eq '^(jmp|j[zn]) |^(ret|exit)$' <<< "$final_inst"; then
    echo "$out: Program does not end with a control flow instruction: $final_inst" >&2
    exit 1
  fi
else
  true > "$out"
fi

for import in "${imports[@]:1}"; do
  module="${import%%:*}"
  import_file="${import#*:}"
  $SED -Ef "$WSLIB"/wsf.sed "$import_file" |
  if [ "$module" = '' ]; then cat
  else
    $SED -E "
      s/\b(call|jmp|jz|jn) (\.?)([A-za-z0-9_-]+)( |$)/\1 \2$module.\3\4/g
      s/(^| )(\.?)([A-Za-z0-9_-]+:)/\1\2$module.\3/g"
  fi
done >> "$out"

$SED -E -i'' 's/(^| )\./\1_/g; s/\./__/g' "$out"
